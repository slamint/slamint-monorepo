volumes:
  slamint:
services:
  redis:
    image: redis:7-alpine
    container_name: cache
    command: [
      "redis-server",
      "--save",
      "",
      "--appendonly",
      "no",
      "--requirepass",
      "${REDIS_PASSWORD:-changeme}",
      "--loglevel",
      "debug"
    ]
    ports:
      - "6379:6379"
    restart: unless-stopped
  redis-commander:
      image: rediscommander/redis-commander:latest
      environment:
        - REDIS_HOSTS=local:cache:6379:0:${REDIS_PASSWORD:-changeme}
      ports:
        - 8000:8081
      depends_on:
      - redis
  account-management:
    image: ghcr.io/slamint/account-management:latest
    container_name: account-management
    environment:
      NODE_ENV: production
      ACCMGMT_MS_HOST: 0.0.0.0
      ACCMGMT_MS_PORT: 8082
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: ${DB_USER:-sla_mint}
      DB_PASS: ${DB_PASS:-P@ssword1}
      DB_NAME: ${DB_NAME:-sla_mint}
      REDIS_HOST: cache
      REDIS_PORT: 6379
      REDIS_PASSWORD: ${REDIS_PASSWORD:-changeme}
      KEYCLOAK_SERVER_URL: ${KEYCLOAK_SERVER_URL:-http://keycloak:8080}
      KEYCLOAK_REALM: ${KEYCLOAK_REALM:-slamint}
      OIDC_ISSUER: ${OIDC_ISSUER:-http://keycloak:8080/realms/slamint}
      OIDC_CLIENT: ${OIDC_CLIENT:-slamint-api}
      OIDC_SVC_CLIENT: ${OIDC_SVC_CLIENT:-slamint-svc-acc-bff}
      OIDC_SVC_CLIENT_SECRET: ${OIDC_SVC_CLIENT_SECRET:-changeme}
      APP_URL: ${APP_URL:-http://localhost:8081}
    ports:
      - "8082:8082"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
      keycloak:
        condition: service_started
    restart: unless-stopped
  api-gateway:
    image: ghcr.io/slamint/api-gateway:latest
    container_name: api-gateway
    environment:
      NODE_ENV: production
      GATEWAY_HOST: 0.0.0.0
      GATEWAY_PORT: 8081
      ACCMGMT_MS_HOST: account-management
      ACCMGMT_MS_PORT: 8082
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: ${DB_USER:-sla_mint}
      DB_PASS: ${DB_PASS:-P@ssword1}
      DB_NAME: ${DB_NAME:-sla_mint}
      REDIS_HOST: cache
      REDIS_PORT: 6379
      REDIS_PASSWORD: ${REDIS_PASSWORD:-changeme}
      KEYCLOAK_SERVER_URL: ${KEYCLOAK_SERVER_URL:-http://keycloak:8080}
      KEYCLOAK_REALM: ${KEYCLOAK_REALM:-slamint}
      OIDC_ISSUER: ${OIDC_ISSUER:-http://keycloak:8080/realms/slamint}
      OIDC_CLIENT: ${OIDC_CLIENT:-slamint-api}
      OIDC_SVC_CLIENT: ${OIDC_SVC_CLIENT:-slamint-svc-acc-bff}
      OIDC_SVC_CLIENT_SECRET: ${OIDC_SVC_CLIENT_SECRET:-changeme}
      APP_URL: ${APP_URL:-http://localhost:8081}
    ports:
      - "8081:8081"
    depends_on:
      account-management:
        condition: service_started
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
      keycloak:
        condition: service_started
    restart: unless-stopped
  keycloak:
    image: quay.io/keycloak/keycloak:24.0
    container_name: keycloak
    command: ['start-dev','--log-level=DEBUG', '--http-port=8080', '--import-realm']
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin

      KC_DB: postgres
      KC_DB_URL: 'jdbc:postgresql://postgres:5432/keycloak'
      KC_DB_USERNAME: sla_mint
      KC_DB_PASSWORD: P@ssword1
      # Optional but handy for health checks/metrics
      KC_HEALTH_ENABLED: 'true'
      KC_METRICS_ENABLED: 'true'
      KC_HTTP_ENABLED: 'false'
    ports:
      - '8080:8080'
    restart: unless-stopped
  postgres:
    image: postgres:16
    container_name: postgres
    environment:
      POSTGRES_USER: sla_mint
      POSTGRES_PASSWORD: P@ssword1
      POSTGRES_DB: sla_mint
    ports: ['5432:5432']
    volumes: [slamint:/var/lib/postgresql/data]
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U sla_mint -d sla_mint']
      interval: 5s
      timeout: 5s
      retries: 20
    restart: unless-stopped
