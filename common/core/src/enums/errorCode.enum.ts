export enum AccountManagementErrCodes {
  INVALID_USERID = 'ACCOUNT_USER_ID_INVALID',
  USER_NOT_FOUND = 'ACCOUNT_USER_NOT_FOUND',
  INVALID_MANAGERID = 'ACCOUNT_MANAGER_ID_INVALID',
  INVALID_NEW_MANAGERID = 'ACCOUNT_NEW_MANAGER_ID_INVALID',
  MANAGER_NOT_FOUND = 'ACCOUNT_MANAGER_NOT_FOUND',
  ENGINEER_NOT_FOUND = 'ACCOUNT_ENGINEER_NOT_FOUND',
  INVALID_REQUEST_USERID = 'ACCOUNT_INVALID_LOGGEDIN_USER',
  ROLE_MUST_DIFFERENT = 'ACCOUNT_ROLE_MUST_DIFFERENT',
  ROLE_NOT_EXIST = 'ACCOUNT_ROULE_NOT_EXIST',
  USER_EXIST = 'ACCOUNT_USER_ALREADY_EXIST',
  MANAGER_HAS_ENGINEER = 'ACCOUNT_MANAGER_HAS_ENGINEER',
  DEPARTMENT_NOT_ASSIGNED = 'ACCOUNT_MANAGER_DEPT_NOT_ASSIGNED',
  DEPARTMENT_ID_REQUIRED = 'ACCOUNT_DEPARTMENT_ID_REQUIRED',
  MANAGER_ID_REQUIRED = 'ACCOUNT_MANAGER_ID_REQUIRED',
  ROLE_CANNOT_BE_ASSIGNED = 'ACCOUNT_ROLE_CANNOT_BE_ASSIGNED',
  MANAGER_CANNOT_BE_ASSIGNED = 'ACCOUNT_MANAGER_CANNOT_BE_ASSIGNED',
}

export enum DepartmentErrCodes {
  INVALID_DEPT = 'DEPARTMENT_ID_INVALID',
  DEPT_NOT_FOUND = 'DEPARTMENT_NOT_FOUND',
  DEPT_EXIST = 'DEPARTMENT_EXIST_ALREADY',
  INVALID_DEPT_DETAILS = 'DEPARTMENT_ADD_NEW_REQUEST_INVALID',
}

export enum serverError {
  INTERNAL_SERVER_ERROR = 'INTERNAL_SERVER_ERROR',
  GATEWAY_TIMEOUT = 'GATEWAY_TIMEOUT',
  UNAUTHORIZED = 'UNAUTHORIZED',
  FORBIDDEN = 'FORBIDDEN',
}
